/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/
package com.webservicescheck.leavedb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * EmpDetails generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`empDetails`")
public class EmpDetails implements Serializable {

    private Integer empId;
    private String empName;
    private String empUid;
    private String empPwd;
    private String designation;
    private Integer managerId;
    private Managers managers;
    private EmpLeaves empLeaves;

    @Id
    @Column(name = "`empID`", nullable = false, scale = 0, precision = 10)
    public Integer getEmpId() {
        return this.empId;
    }

    public void setEmpId(Integer empId) {
        this.empId = empId;
    }

    @Column(name = "`empName`", nullable = true, length = 255)
    public String getEmpName() {
        return this.empName;
    }

    public void setEmpName(String empName) {
        this.empName = empName;
    }

    @Column(name = "`empUID`", nullable = true, length = 255)
    public String getEmpUid() {
        return this.empUid;
    }

    public void setEmpUid(String empUid) {
        this.empUid = empUid;
    }

    @Column(name = "`empPwd`", nullable = true, length = 255)
    public String getEmpPwd() {
        return this.empPwd;
    }

    public void setEmpPwd(String empPwd) {
        this.empPwd = empPwd;
    }

    @Column(name = "`designation`", nullable = true, length = 255)
    public String getDesignation() {
        return this.designation;
    }

    public void setDesignation(String designation) {
        this.designation = designation;
    }

    @Column(name = "`managerID`", nullable = true, scale = 0, precision = 10)
    public Integer getManagerId() {
        return this.managerId;
    }

    public void setManagerId(Integer managerId) {
        this.managerId = managerId;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`managerID`", referencedColumnName = "`managerID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_ov1k1jygmj3xynxgti7c2qvnv`"))
    @Fetch(FetchMode.JOIN)
    public Managers getManagers() {
        return this.managers;
    }

    public void setManagers(Managers managers) {
        if(managers != null) {
            this.managerId = managers.getManagerId();
        }

        this.managers = managers;
    }
    @OneToOne(fetch = FetchType.EAGER, mappedBy = "empDetails")
    @Cascade({CascadeType.SAVE_UPDATE})
    @Fetch(FetchMode.JOIN)
    public EmpLeaves getEmpLeaves() {
        return this.empLeaves;
    }

    public void setEmpLeaves(EmpLeaves empLeaves) {
        this.empLeaves = empLeaves;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof EmpDetails)) return false;
        final EmpDetails empDetails = (EmpDetails) o;
        return Objects.equals(getEmpId(), empDetails.getEmpId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getEmpId());
    }
}