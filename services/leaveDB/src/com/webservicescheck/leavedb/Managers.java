/*Copyright (c) 2015-2016 gmail.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with gmail.com*/
package com.webservicescheck.leavedb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.List;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.PostPersist;
import javax.persistence.Table;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * Managers generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`managers`")
public class Managers implements Serializable {

    private Integer managerId;
    private String name;
    private List<EmpDetails> empDetailses;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`managerID`", nullable = false, scale = 0, precision = 10)
    public Integer getManagerId() {
        return this.managerId;
    }

    public void setManagerId(Integer managerId) {
        this.managerId = managerId;
    }

    @Column(name = "`name`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @JsonInclude(Include.NON_EMPTY)
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "managers")
    @Cascade({CascadeType.SAVE_UPDATE})
    public List<EmpDetails> getEmpDetailses() {
        return this.empDetailses;
    }

    public void setEmpDetailses(List<EmpDetails> empDetailses) {
        this.empDetailses = empDetailses;
    }

    @PostPersist
    public void onPostPersist() {
        if(empDetailses != null) {
            empDetailses.forEach(_empDetails -> _empDetails.setManagers(this));
        }
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Managers)) return false;
        final Managers managers = (Managers) o;
        return Objects.equals(getManagerId(), managers.getManagerId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getManagerId());
    }
}